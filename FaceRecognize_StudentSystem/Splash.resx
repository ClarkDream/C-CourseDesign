<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABCJJREFUaEPd
        mU/IFVUYxjNRQzNNsyBx0bbCNtpSlGhVYUlIENGqLJKCjLSChAQNgsCNrVq0alUbIYpIMSiiIiuisIKi
        gkCiUCP6f/o95zxnut93535z5n5+t3P7wcOd877POzPvd2fO3DnfBSWEEN5ENXLCp1iGi6rEp1iGa/oV
        LTA+pd6NHEfHPKyC2AV4OL24j/JG8C5Dj6AP0Y/WSbQHLbVt4nDsiIdzg289+iBWtPM+utL2iZIOX9AI
        novQR9Edwim0HV1m3Ya+QEKNLnPZxEiHLmvk4WQNn6HVDjcQuxSpQfGgwxPDxy1q5L1kDdsdGoKcvhnx
        jkNzgu8e9Dn6AT2PljvVG2ojHo4Gz7lkDSsdGoLcqmQJZxwaCZ57k3UGR5zujeuLGvk5WcPFDg1BLjdy
        1qFWyG9Gv6K/0V3oWiRO29Ib1xc18m6yznlp7UiW8LZDQ5Bbi76OrhCedUwThzgVTWPg+qJGdidr0c1+
        v8MzIH4hejU60g/PJegqpGeR2G1rb1xf1IgehIPT761opaVvYnD6bX0wEj8UHSF8iy5Hy9HHCsBLaJGt
        vUm7KGhE4Ov9QGS8GG1E+jXwF/oDbXHuOSR0qa2JBWOSdlPYiMC7FN2HdNK6YSXdP7uQLpUN6Hb0DDqB
        8iSR2eP93JmGsX5T3Pk8SLsqu7TWoafRdyhPxaV8g15Gus8WoatRbnCXDzEvvK+5GyGvmebL6Ozme3QU
        7Uc3oSu8mwhj3VOfIvGCw/PG++ts5HCyhbfQ9Wjks2QU1FyC7kafIKGJY+wn+WzSLrsb+SrZwnUOFYFf
        98zN6EX0C8roFWCDbeeFtNvuRn5PtrDEoU7wPoFOx6qEZqzX0U602LZWZO7gT3SN7ZEU7m4k4mER2HUw
        ob++pt71TnUSq7p5zfaIYwvSSMTDXri0izdsjzg2dY3o295oeySFF7gRPia9oNe+UOfkNDXSfq7Ojd3I
        JPFhF6YRPv4f3wgfk2xEv67bV0FTfvxGqsHnNN2NcC43plOK6JVU7xg7nB6CnPyDl1KpPy+/nld/BMMB
        pJWONg7a1kCsKn+ExA1IRb+hx9FqtAI95JhyW22f7d+L9D7+n/kbCObL41GHGog9llLhuEPV+RsI5tfZ
        tqWfNSn174oi21X5GwjmwlUONRDLhc2KIttV+RsI6t9r4gGHGojlr7J58LBdlb+B4C0pN3RzqUhvjHrj
        i+tTgu2q/DMgkRfQ2jhkWwOxqvwREneg2Ytrg+ia3Wl7df4IAa0Ual4WWpPdgrRILWlbi21CHv1zpyp/
        bkIrimcUhSdjsAVy+5Il/IRq869V4Kk4DOGoPSPB80qyRmry79cgL/O3zwAD4NmWrJGa/Cc1yDfUCudH
        gkfruJma/Gc1iDjXie31+f059aiR/CtzWuGdPRz7B47FdejCfTruAAAAAElFTkSuQmCC
</value>
  </data>
</root>